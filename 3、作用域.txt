1、全局作用域
直接写在script标签中的JS代码，都在全局作用域中。

全局作用域在页面打开时创建，页面关闭时销毁。

全局作用域中，有一个全局对象window，代表浏览器的一个窗口，由浏览器创建，可以直接使用。

在全局作用域中创建的变量，都会作为window对象的属性保存。
创建的函数都会作为window的方法保存。

在使用变量时，如果变量xxx没有被定义，使用window.xxx调用会得到undefined结果，但是直接使用xxx会报错。

全局中使用关键字var声明的变量，会在所有代码执行前被声明。

使用函数声明形式创建的函数function 函数名（）{}，会在所有代码执行前被创建。
使用变量赋值形式创建的函数 var 函数名 = function（）{}，只有在实现赋值之后，函数才会被创建。即该条语句执行之后，该名称的函数对象才存在。

全局作用域中的变量都是全局变量。


**********************************************************************************************
2、局部作用域（函数作用域）
函数作用域，在函数（调用）时创建。函数执行完毕，函数作用域销毁。

每调用一次函数就会创建一个作用域，他们之间相互独立。

函数作用域中可以访问到全局变量，在函数外部访问不到局部变量。

当出现重名时，局部变量在局部具有高优先级。
当使用了当前局部中未定义的变量，则向其上一级中寻找该变量。
作用域可存在层层嵌套关系，找离得最近的作用域中的同名变量使用。

在函数中访问全局，可以用window访问。window.a

函数作用域中使用var声明的变量，在函数中所有代码执行前被声明。

使用函数声明形式创建的函数function 函数名（）{}，会在函数中所有代码执行前被创建。

函数中不使用var声明的变量，都会默认为（全局变量），即默认给window的属性赋值。

函数有形参，就相当于在函数中声明了形参这个变量，和在函数里面用var声明的效果一样。
