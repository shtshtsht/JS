事件对象（Event对象）

当事件的响应函数被触发时，浏览器每次都会将一个事件对象作为实参传递进响应函数。
给响应函数定义一个形参，即可接收使用这个实参。
box.onclick = function(ev){}

事件对象封装了当前事件相关的一切信息，包括鼠标坐标、键盘按键、滚轮方向等详细信息。

ie8中，响应函数被触发时，浏览器不会传递事件对象。而是将事件对象作为window对象的属性传入。
window.事件对象.属性

//兼容性写法1
if(!event){
  event = window.事件对象
}
//写法2
event = event || window.event

**********************************************************************
事件的冒泡

后代元素上的事件被触发时，其祖先元素的相同事件在其之后也会被触发。

取消冒泡
ev.cancelBubble = true;

***************************************************
事件的委派
（事件冒泡的应用）

把事件响应函数绑定到祖先元素，以后再向其中添加相同子元素时，都可以通过冒泡触发同一事件。
可以减少事件绑定次数

需要添加对期望响应元素的判断，因为所有子元素都会通过冒泡触发祖先元素的相同事件

使用event事件的target属性
target表示触发事件的对象
如 if （event.target.className == “XXX” ）

***************************************************
事件的绑定

对一个事件绑定多个响应函数不能使用 对象.事件 = 函数 的形式，因为这种形式为函数赋值，后面的赋值会覆盖前面的赋值

使用addEventListener(事件字符串，回调函数，false)方法（ie8不支持）
参数1：事件字符串，不用 on 前缀
参数2：事件出发时调用的函数
参数3：是否在捕获阶段触发事件，布尔值，一般传false
this,是绑定事件的对象

当添加多个时
btn.addEventListener("click"，fun1，false)
btn.addEventListener("click"，fun2，false)
btn.addEventListener("click"，fun3，false)
onclick事件触发时，按照 1 2 3 ，fun1,fun2,fun3顺序执行回调函数

ie8及以下
attachEvent(事件字符串，回调函数)
参数1：需要写 on 前缀
参数2：回调函数
this，是window

btn.attachEvent("click"，fun1)
btn.attachEvent("click"，fun2)
btn.attachEvent("click"，fun3)
执行时顺序为，3 2 1 ，fun3，fun2，fun1

自定义具有兼容性的绑定方法 bind
obj 要绑定事件的对象
eventStr 事件字符串(不要on)
callback 回调函数
function bind（obj，eventStr，callback）{
  if(obj.addEventListener){
    //chrome和火狐等兼容
    obj.addEventListener(eventStr，callback，false);
  }
  else{
    //this 是谁，由函数的调用方式决定
    //默认callback由浏览器调用，使用回调函数可收回调用权限
    //ie8及以下
    obj.attachEvent("on"+eventStr，function（）{
      callback.call(obj);
    });
   }
}

*********************************************
事件的传播

三个阶段：（ie8及以下还没有这个概念）
1、捕获阶段，从祖先元素向目标元素进行事件的捕获，捕获过程中不会触发事件
2、目标阶段，事件捕获到目标元素，捕获结束，触发元素对应事件
3、冒泡阶段，事件从目标元素向祖先元素传递，依次触发祖先元素上的事件

addEventListener(事件字符串，回调函数，true)
第三个参数设置为true，则捕获阶段就会触发事件

***********************************************

事件的默认行为，可以在事件所绑定的回调函数中 使用return false；取消

***********************************************
onmousewheel 鼠标滚轮滚动事件

火狐不支持
火狐中使用DOMMouseScroll 绑定鼠标滚轮滚动事件，且【必须】使用addEventListener（）添加绑定

wheelDelta 滚轮滚动方向，上正，下负。
火狐中用detail，上负，下正。

对于使用addEventListener（）添加的绑定，要使用 preventDefault（）方法取消默认行为。（ie8不支持）
其他，使用return false；就可以取消默认行为

************************************************
键盘事件

键盘事件通常绑定给可以获取焦点的事件或document对象

onkeydown
按键不松开，事件会被连续触发。
连续触发时，第一次和第二次之间会有一个小的默认时间间隔，防止误操作。

onkeyup 

event的keyCode属性，获取按键对应的unicode编码，可判断哪个按键被按下
altKey ctrlKey shiftKey 三个属性用于单独判断这三个功能键，按下返回true

在input text 中 onkeydown 默认行为是在文本框中显示按下的按键，使用return false 可取消；






