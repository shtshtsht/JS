call 和 apply

函数对象的方法，通过函数对象调用。

fun.apply();
fun.call();
fun();

相同点：都是运行函数，

不同点：
1、fun（）；
this是window
2、call（obj）；apply（obj）；
第一个参数可以是对象obj，此时指定函数的上下文对象this为obj。
3、call（obj，a，b, c）；
如果函数有其他参数，按顺序写在call（）参数列表的对象参数后面。
4、apply（obj，Array[其他参数]）
如果函数有其他参数，封装为数组后，写在apply（）参数列表的对象参数后面。
可直接用中括号封装，[参数1，参数2，参数3···]。

********************************************************
arguments

在调用函数时，浏览器每次都会传递两个（隐含的）参数；
1、上下文对象，this
2、封装实参的对象，arguments

argument是一个和数组类似的对象。可以通过索引操作数据。可以获取长度length。

在调用函数时，向函数中传递的实参都会保存在arguments中。

长度length属性，就是传入实参的个数。

函数不定义形参，也可以用arguments使用实参。
function fun（）；未定义形参
fun（实参1，实参2，···）{实参1 arguments[0]；实参2 arguments[1] ····}使用实参。


arguments.callee
callee属性对应当前正在执行的函数对象。


