数组（Array）是一个内建对象

1、创建
var arr = new Array()；
var arr = new Array(size)；JS中数组可以随意修改长度，所以这种方法不常用。
var arr = new Array(item1，item2，item3······)；
var arr = [];
var arr = [item1，item2，item3······];

2、使用
数组名[索引]
如果读取的索引不存在，返回undefined 

3、length属性
可获取长度，也可设置长度
arr[arr.length]向末尾新增元素

4、push（）
在末尾添加一个元素，返回新的长度
可一次性添加多个 push（item1，item2，item3······）

5、pop（）
删除，并返回最后一个元素。自动调整索引
出栈

6、shift（）
删除，并返回第一个元素。自动调整索引
出队

7、unshift()
在开头添加一个元素，返回新的长度。自动调整索引

8、遍历
常用for循环

也可以用forEach（）【ie9及以上可用】
需要函数作为参数传入。常用匿名函数。
forEach（function（value，index，obj）{}）；
这里的这个function由程序员创建，但是不由程序员调用，称为回调函数。回diao
数组中有几个元素，function就被调用几次。每次执行时，浏览器会将遍历到的元素以实参形式传递进来。定义function的形参就可以读取这些元素。
回调函数中会传入三个参数，第一个是当前被遍历的元素值，第二个是索引号，第三个是正在遍历的数组


9、slice（start,end）
从数组中提取指定的一段，包含start，不含end。
不会影响原数组
end可缺省，默认到数组结尾；若为负数，则表示倒数第几个元素。
start可以是负值，默认从0开始

10、splice（start，size，item1，item2，item3···）
从数组中删除指定的一段，并返回被删除的值。
size值为删除的个数，0就是不删
从第三个参数开始，向前面被删的位置补位。如果位置补满了，则在start前面插入这些元素。
常用于向数组中间添加元素。

注意，splice（）删除元素，索引会自动重排

11、concat（arr1，arr2，item，item）
不操作原数组
arr.concat(arr1)返回一个新的拼接好的数组，arr1接到arr后面
参数可以是数组，也可以是单个元素，都可以拼起来。

12、join（"连接符"）
不操作原数组
把数组转为字符串。把所有元素都变串，再用连接符拼接起来。
连接符空缺时，默认逗号拼接。
使用空串作为连接符，就可以得到无缝串结果

13、reverse（）
操作原数组
把原数组变反向

14、sort（）
把原数组排序。
默认按字符串升序，即使对纯数字数组元素，也是按字符串排序。

要想按Number排序，需要给sort（）传参数，这个参数是个函数。
通常使用回调函数。也可以传入外部已定义函数。
sort（function（a,b）{return；}）
回调函数中需要定义两个形参。a对应数组中靠前的一个元素，b对应数组中靠后的一个元素。
若return大于零，则交换a，b对应的元素位置。
小于和等于，不交换。


